#! /usr/bin/env python
"""mailuser [flags] args...

Flags:
    -n   No date check
    -l   Just list who would get mail
    -h   This help
    -d N Only if sent more than N days ago

Arguments is a list of SQL paterns (will get wrapped in wildcards, %)
and send them license agreement email.
"""

import mysql.connector
import datetime, os, re, subprocess, sys, string, random
import getopt

dbconfig = {
        'user': 'license',
        'password': open('rwpass.txt').read().strip(),
        'database': 'license'
        }
conn = mysql.connector.connect(**dbconfig)
cursor = conn.cursor()
raw = open("request-approval.txt").read()

# Parse JCL.
today = datetime.datetime.today().date()
justlist = 0
checkdate = 1
cutoff = 2
opts, args = getopt.getopt(sys.argv[1:], 'hnld:')
for o, a in opts:
    if o == '-l':
        justlist = 1
    elif o == '-n':
        checkdate = 0
    elif o == '-d':
        cutoff = int(a)
    else:
        print __doc__
        raise SystemExit

# Get dict of matching users
who = {}
for email in args:
    q = 'SELECT email,last_asked,uid,secret FROM users WHERE email LIKE %s'
    pat = '%' + email + '%'
    cursor.execute(q, (pat,))
    for row in cursor:
        email,last_asked,uid,secret = row
        if checkdate == 0 or last_asked is None:
            who[email] = (uid,secret)
        if last_asked:
            diff = today - last_asked
            days = diff.days
            if days >= cutoff:
                who[email] = (uid,secret)

if justlist:
    for email in who:
        print email
    raise SystemExit

for email in who:
    print email
    uid, secret = who[email]
    d = { 'uid': uid, 'secret': secret }
    args = ('mail', '-s', 'OpenSSL License change',
            '-r', 'license@openssl.org', email)
    f = subprocess.Popen(args, stdin=subprocess.PIPE).stdin
    print >>f, raw % d
    f.close()
    today = datetime.datetime.today().date()
    t = 'UPDATE users SET last_asked=%s WHERE uid=%s'
    cursor.execute(t, (today, uid))
    conn.commit()
    #print raw % d
